[{"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\index.js":"1","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\App.js":"2","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Products\\Products.jsx":"3","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Products\\Product\\Product.jsx":"4","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Products\\Product\\styles.js":"5","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Navbar\\Navbar.jsx":"6","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Navbar\\styles.js":"7","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\index.js":"8","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Products\\styles.js":"9","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\lib\\commerce.js":"10","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Cart\\Cart.jsx":"11","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Cart\\styles.js":"12","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Cart\\CartItem\\styles.js":"14","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\CheckoutForm\\AddressForm.jsx":"17","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\CheckoutForm\\CustomTextField.jsx":"19","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":151,"mtime":1609455596269,"results":"21","hashOfConfig":"22"},{"size":3226,"mtime":1609544652550,"results":"23","hashOfConfig":"22"},{"size":715,"mtime":1609516570378,"results":"24","hashOfConfig":"22"},{"size":1369,"mtime":1609516679129,"results":"25","hashOfConfig":"22"},{"size":405,"mtime":1609456802467,"results":"26","hashOfConfig":"22"},{"size":1499,"mtime":1609627987659,"results":"27","hashOfConfig":"22"},{"size":1631,"mtime":1609458863586,"results":"28","hashOfConfig":"22"},{"size":237,"mtime":1609531551986,"results":"29","hashOfConfig":"22"},{"size":298,"mtime":1609515981099,"results":"30","hashOfConfig":"22"},{"size":127,"mtime":1609513868980,"results":"31","hashOfConfig":"22"},{"size":2010,"mtime":1609530850796,"results":"32","hashOfConfig":"22"},{"size":597,"mtime":1609517767090,"results":"33","hashOfConfig":"22"},{"size":1318,"mtime":1609530588404,"results":"34","hashOfConfig":"22"},{"size":349,"mtime":1609518186808,"results":"35","hashOfConfig":"22"},{"size":4031,"mtime":1609546607416,"results":"36","hashOfConfig":"22"},{"size":1208,"mtime":1609531432424,"results":"37","hashOfConfig":"22"},{"size":5605,"mtime":1609540897792,"results":"38","hashOfConfig":"22"},{"size":3000,"mtime":1609546178978,"results":"39","hashOfConfig":"22"},{"size":592,"mtime":1609545543501,"results":"40","hashOfConfig":"22"},{"size":1106,"mtime":1609541671647,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1nj9c1d",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\index.js",[],["86","87"],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\App.js",[],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Navbar\\Navbar.jsx",["88","89"],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\index.js",[],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Products\\styles.js",[],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\lib\\commerce.js",[],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Cart\\styles.js",[],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["90"],"import React, { useState, useEffect } from 'react';\r\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, CssBaseline } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../../lib/commerce';\r\nimport useStyles from './styles';\r\nimport AddressForm from '../AddressForm';\r\nimport PaymentForm from '../PaymentForm';\r\n\r\n\r\n\r\nconst steps = ['Shipping address', 'Payment details'];\r\n\r\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [checkoutToken, setCheckoutToken] = useState(null);\r\n    const [shippingData, setShippingData] = useState({});\r\n    const [isFinished, setIsFinished] = useState(false);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const generateToken = async () => {\r\n            try {\r\n                const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\r\n\r\n                setCheckoutToken(token);\r\n            } catch (error) {\r\n                history.pushState('/');\r\n            }\r\n        }\r\n\r\n        generateToken();\r\n    }, [cart]);\r\n\r\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n    const next = (data) => {\r\n        setShippingData(data);\r\n\r\n        nextStep();\r\n    }\r\n\r\n    const timeout = () => {\r\n        setTimeout(() => {\r\n            setIsFinished(true)\r\n        }, 3000);\r\n    }\r\n\r\n    let Confirmation = () => order.customer ? (\r\n        <>\r\n            <div>\r\n                <Typography variant='h5'>\r\n                    Thank you for your purchase, {order.customer.firtname} {order.customer.lastname}\r\n                </Typography>\r\n                <Divider className={classes.divider} />\r\n                <Typography variant='subtitle2'>Order ref: {order.customer_reference}</Typography>\r\n            </div>\r\n            <br />\r\n            <Button component={Link} to='/' variant='outlined' type='button'>Back to Home</Button>\r\n        </>\r\n    ) : isFinished ? (\r\n        <>\r\n            <div>\r\n                <Typography variant='h5'>\r\n                    Thank you for your purchase\r\n                </Typography>\r\n                <Divider className={classes.divider} />\r\n            </div>\r\n            <br />\r\n            <Button component={Link} to='/' variant='outlined' type='button'>Back to Home</Button>\r\n        </>\r\n    ) : (\r\n        <div className={classes.spinner}>\r\n            <CircularProgress />\r\n        </div>\r\n    );\r\n\r\n\r\n    if(error) {\r\n        <>\r\n            <Typography variant='h5'>Error: {error}</Typography>\r\n            <br />\r\n            <Button component={Link} to='/' variant='outlined' type='button'>Back to Home</Button>\r\n\r\n        </>\r\n    }\r\n\r\n    const Form = () => activeStep === 0 \r\n        ? <AddressForm checkoutToken={checkoutToken} next={next} />\r\n        : <PaymentForm shippingData={shippingData} checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} onCaptureCheckout={onCaptureCheckout} timeout={timeout} />\r\n\r\n        \r\n\r\n    return (\r\n        <>\r\n        <CssBaseline />\r\n            <div className={classes.toolbar} />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant='h4' align='center'>Checkout</Typography>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((step) => (\r\n                            <Step key={step}>\r\n                                <StepLabel>{step}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout;\r\n","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\CheckoutForm\\AddressForm.jsx",["91","92"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/commerce';\r\n\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n\r\n    const methods = useForm();\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name }));\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name }));\r\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatter_with_symbol})`}) )\r\n\r\n\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const {countries} = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n        \r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    }\r\n\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const {subdivisions} = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region });\r\n\r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)\r\n    }, []);\r\n\r\n    useEffect (() => {\r\n        if(shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry]);\r\n\r\n\r\n    useEffect(() => {\r\n        if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    }, [shippingSubdivision])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography variant='h6' gutterBottom>Shipping Address</Typography>\r\n            <FormProvider {...methods} >\r\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name='firstName' label='First Name' />\r\n                        <FormInput name='lastName' label='Last Name' />\r\n                        <FormInput name='address1' label='Address' />\r\n                        <FormInput name='email' label='Email' />\r\n                        <FormInput name='city' label='City' />\r\n                        <FormInput name='zip' label='Zip / Postal Code' />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {countries.map((country) => (\r\n                                    <MenuItem key={country.id} value={country.id}>\r\n                                        {country.label}    \r\n                                    </MenuItem>\r\n                                ))}\r\n                               \r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivisions</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {subdivisions.map((subdivision) => (\r\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                                        {subdivision.label}    \r\n                                    </MenuItem>\r\n                                ))}\r\n                               \r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.label}    \r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                        <Button component={Link} to='/cart' variant='outlined'>Back to Cart</Button>\r\n                        <Button type='submit' variant='contained' color='primary'>Next</Button>\r\n\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressForm;\r\n","C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\Users\\ahmed\\Desktop\\React\\e-commerce-app\\src\\components\\CheckoutForm\\Review.jsx",[],["93","94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":46,"nodeType":"101","messageId":"102","endLine":2,"endColumn":54},{"ruleId":"99","severity":1,"message":"103","line":2,"column":56,"nodeType":"101","messageId":"102","endLine":2,"endColumn":60},{"ruleId":"104","severity":1,"message":"105","line":34,"column":8,"nodeType":"106","endLine":34,"endColumn":14,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":52,"column":8,"nodeType":"106","endLine":52,"endColumn":10,"suggestions":"109"},{"ruleId":"104","severity":1,"message":"110","line":61,"column":8,"nodeType":"106","endLine":61,"endColumn":29,"suggestions":"111"},{"ruleId":"95","replacedBy":"112"},{"ruleId":"97","replacedBy":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["116"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["117"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["118"],["114"],["115"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [cart, history]",{"range":"125","text":"126"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"127","text":"128"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"129","text":"130"},[1208,1214],"[cart, history]",[2128,2130],"[checkoutToken.id]",[2398,2419],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]